import { createSlice } from "@reduxjs/toolkit";
import { numberIsPair, numberIsPrime, numberIsMultiple } from "../../auxiliary-functions/numbersChecks";

const numbersSlice = createSlice({
  name: "numbers",
  initialState: {
    data: [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      46,
      47,
      48,
      49,
      50,
      51,
      52,
      53,
      54,
      55,
      56,
      57,
      58,
      59,
      60,
      61,
      62,
      63,
      64,
      65,
      66,
      67,
      68,
      69,
      70,
      71,
      72,
      73,
      74,
      75,
      76,
      77,
      78,
      79,
      80,
      81,
      82,
      83,
      84,
      85,
      86,
      87,
      88,
      89,
      90,
      91,
      92,
      93,
      94,
      95,
      96,
      97,
      98,
      99,
      100,
    ],
    input: 1,
  },
  reducers: {
    userInput: (state, action) => {
      state.input = action.payload;
    },
  },
});

const selectPairNumbers = (state) => state.numbers.data.filter((number) => numberIsPair(number));
const selectOddNumbers = (state) => state.numbers.data.filter((number) => !numberIsPair(number));
const selectPrimeNumbers = (state) => state.numbers.data.filter((number) => numberIsPrime(number));
const selectInput = (state) => state.numbers.input;
const selectMultipleNumbers = (state) =>
  state.numbers.data.filter((number) => numberIsMultiple(number, state.numbers.input));

export default numbersSlice.reducer;
export const { userInput } = numbersSlice.actions;
export {
  numbersSlice,
  selectPairNumbers,
  selectOddNumbers,
  selectPrimeNumbers,
  selectMultipleNumbers,
  selectInput,
};
